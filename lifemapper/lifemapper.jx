{
    "define": {
        "MAXENT": "./tools/maxent.jar",
        "JAVA": "java",
        "PROCESS_POINTS": "./tools/process_points.py",
        "PROJECTIONS": ["data/layers/worldclim"],
        "TAXA": [basename(t, ".csv") for t in listdir("points")],
        "MODEL": "data/layers/worldclim",
    },
    "rules": [
        {
            "command": template(
                "mkdir -p outputs && {PROCESS_POINTS} points/{t}.csv outputs/{t}.csv"
            ),
            "outputs": [
                template("outputs/{t}.csv"),
            ],
            "inputs": [
                template("points/{t}.csv"),
                PROCESS_POINTS,
            ],
        } for t in TAXA, {
            "command": template(
                "mkdir -p outputs/{t} && {JAVA} -cp {MAXENT} density.MaxEnt -s outputs/{t}.csv -e {MODEL} -o outputs/{t} nowarnings nocache autorun -z"
            ),
            "inputs": [
                MAXENT,
                #JAVA,
                MODEL,
                template("outputs/{t}.csv")
            ],
            "outputs": [
                template("outputs/{t}"),
            ],
        } for t in TAXA, {
            "command": template(
                "{JAVA} -cp {MAXENT} density.Project outputs/{t}/{t}.lambdas {p} outputs/{t}_{base}.asc nowarnings nocache autorun -z; touch outputs/{t}_{base}.asc; touch outputs/{t}_{base}_clamping.asc",
                {"base": basename(p)}
            ),
            "outputs": [
                template(
                    "outputs/{t}_{base}.asc",
                    {"base": basename(p)}
                ),
                template(
                    "outputs/{t}_{base}_clamping.asc",
                    {"base": basename(p)}
                )
            ],
            "inputs": [
                MAXENT,
                #JAVA,
                MODEL,
                p,
                template("outputs/{t}"),
            ]
        } for t in TAXA for p in PROJECTIONS,
    ],
}
