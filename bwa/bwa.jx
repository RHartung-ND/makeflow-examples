
{
  "define":
    {
      "BWA":"./bwa",
      "ARGS":"mem",
      "SPLIT":"./fastq_reduce",
      "CONCAT":"./cat_bwa",
      "REF":"ref.fastq",
      "REF_INDEX":
        [
          "ref.fastq."+x for x in ["amb","ann","bwt","pac","sa"]
        ],
      "INPUT_PRE":"query.fastq",
      "SEQ_PER_SPLIT":10,
      "TOTAL_SEQ":1000
    },
  "rules":
    [
      
      {
        "command":template("{SPLIT} {INPUT_PRE} {SEQ_PER_SPLIT}"),
        "outputs":
          [
            template("{INPUT_PRE}.{i}") for i in range(ceil(TOTAL_SEQ/SEQ_PER_SPLIT))
          ],
        "inputs":
          [
            SPLIT,
            INPUT_PRE
          ],
        "local_job":true
      },
      
      {
        "command":template("{BWA} index {REF}"),
        "inputs":
          [
            BWA,
            REF
          ],
        "outputs":
          [
            x for x in REF_INDEX
          ],
        "local job":true
      },
      
      {
        "command":template("{BWA} {ARGS} {REF} {INPUT_PRE}.{i} > {INPUT_PRE}.{i}.sam 2> {INPUT_PRE}.{i}.err"),
        "outputs":
          [
            template("{INPUT_PRE}.{i}.sam"),
            template("{INPUT_PRE}.{i}.err")
          ],
        "inputs":
          [
            BWA,
            REF,
            x for x in REF_INDEX,
            template("{INPUT_PRE}.{i}")
          ]
      } for i in range(ceil(TOTAL_SEQ/SEQ_PER_SPLIT)),
      
      {
        "command":template("{CONCAT} {INPUT_PRE}.sam {INPUT_PRE}*.sam"),
        "outputs":
          [
            template("{INPUT_PRE}.sam")
          ],
        "inputs":
          [
            CONCAT,
            template("{INPUT_PRE}.{i}.sam") for i in range(ceil(TOTAL_SEQ/SEQ_PER_SPLIT))
          ]
      }
    ]
}
